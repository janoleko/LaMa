// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// forward_cpp
double forward_cpp(arma::mat allprobs, arma::rowvec delta, arma::cube Gamma1, arma::cube Gamma2, int startDD, std::vector<int> tod);
RcppExport SEXP _Lcpp_forward_cpp(SEXP allprobsSEXP, SEXP deltaSEXP, SEXP Gamma1SEXP, SEXP Gamma2SEXP, SEXP startDDSEXP, SEXP todSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type allprobs(allprobsSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma1(Gamma1SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma2(Gamma2SEXP);
    Rcpp::traits::input_parameter< int >::type startDD(startDDSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type tod(todSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_cpp(allprobs, delta, Gamma1, Gamma2, startDD, tod));
    return rcpp_result_gen;
END_RCPP
}
// forward_cpp_g
double forward_cpp_g(arma::mat allprobs, arma::rowvec delta, arma::cube Gamma);
RcppExport SEXP _Lcpp_forward_cpp_g(SEXP allprobsSEXP, SEXP deltaSEXP, SEXP GammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type allprobs(allprobsSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_cpp_g(allprobs, delta, Gamma));
    return rcpp_result_gen;
END_RCPP
}
// forward_cpp_h
double forward_cpp_h(arma::mat allprobs, arma::rowvec delta, arma::mat Gamma);
RcppExport SEXP _Lcpp_forward_cpp_h(SEXP allprobsSEXP, SEXP deltaSEXP, SEXP GammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type allprobs(allprobsSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_cpp_h(allprobs, delta, Gamma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Lcpp_forward_cpp", (DL_FUNC) &_Lcpp_forward_cpp, 6},
    {"_Lcpp_forward_cpp_g", (DL_FUNC) &_Lcpp_forward_cpp_g, 3},
    {"_Lcpp_forward_cpp_h", (DL_FUNC) &_Lcpp_forward_cpp_h, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_Lcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
