"0","mllk = function(par) {"
"0","  getAll(par, dat) # makes everything contained available without $"
"0","  Gamma = tpm(eta) # computes transition probability matrix from unconstrained eta"
"0","  delta = stationary(Gamma) # computes stationary distribution"
"0","  # exponentiating because all parameters strictly positive"
"0","  mu = exp(logmu)"
"0","  sigma = exp(logsigma)"
"0","  kappa = exp(logkappa)"
"0","  # reporting statements for later use"
"0","  REPORT(mu); ADREPORT(mu)"
"0","  REPORT(sigma); ADREPORT(sigma)"
"0","  REPORT(kappa); ADREPORT(kappa)"
"0","  # calculating all state-dependent densities"
"0","  allprobs = matrix(1, nrow = length(step), ncol = N)"
"0","  ind = which(!is.na(step) & !is.na(angle)) # only for non-NA obs."
"0","  for(j in 1:N){"
"0","    allprobs[ind,j] = dgamma2(step[ind],mu[j],sigma[j])*dvm(angle[ind],0,kappa[j])"
"0","  }"
"0","  -forward(delta, Gamma, allprobs, ad = TRUE) # simple forward algorithm"
"0","}"
