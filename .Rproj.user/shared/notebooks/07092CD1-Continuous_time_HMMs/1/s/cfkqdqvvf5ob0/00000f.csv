"0","set.seed(123)"
"0",""
"0","k = 200 # number of state switches"
"0","trans_times = s = rep(NA, k) # time points where the chain transitions"
"0","s[1] = sample(1:3, 1) # uniform initial distribuion"
"0","# exponentially distributed waiting times"
"0","trans_times[1] = rexp(1, -Q[s[1],s[1]])"
"0","n_arrivals = rpois(1, trans_times[1])"
"0","obs_times = sort(runif(n_arrivals, 0, trans_times[1]))"
"0","x = rnorm(n_arrivals, mu[s[1]], sigma[s[1]])"
"0","for(t in 2:k){"
"0","  # off-diagonal elements of the s[t-1] row of Q divided by the diagonal element"
"0","  # give the probabilites of the next state"
"0","  s[t] = sample(c(1:3)[-s[t-1]], 1, prob = Q[s[t-1],-s[t-1]]/-Q[s[t-1],s[t-1]])"
"0","  # exponentially distributed waiting times"
"0","  trans_times[t] = trans_times[t-1] + rexp(1, -Q[s[t], s[t]])"
"0","  n_arrivals = rpois(1, trans_times[t]-trans_times[t-1])"
"0","  obs_times = c(obs_times, "
"0","                sort(runif(n_arrivals, trans_times[t-1], trans_times[t])))"
"0","  x = c(x, rnorm(n_arrivals, mu[s[t]], sigma[s[t]]))"
"0","}"
