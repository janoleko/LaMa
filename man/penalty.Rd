% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pql_functions.R
\name{penalty}
\alias{penalty}
\title{Computes penalty based on quadratic form}
\usage{
penalty(re_coef, S, lambda)
}
\arguments{
\item{re_coef}{Coefficient vector, matrix or list of coefficient vectors/ matrices.\cr\cr
Each list entry corresponds to a different smooth/ random effect with its own associated penalty matrix in S.
When several smooths/ random effects of the same kind are present, it is convenient to pass them as a matrix, where each row corresponds to one smooth/ random effect.\cr\cr
Caution: The formatting of \code{re_coef} needs to match the structure of the parameter list in your penalized negative log-likelihood function, 
i.e. you cannot have two random effect vectors of different names (different list elements in the parameter list), combine them into a matrix inside your likelihood and pass the matrix to \code{penalty}.
If these are seperate random effects, each with its own name, they need to be passed as a list to \code{penalty}.}

\item{S}{Penalty matrix or list of penalty matrices matching the structure of \code{re_coef} and also the dimension of the individuals smooths/ random effects.}

\item{lambda}{Penalty strength parameter. Vector that has a length corresponding to the total number of random effects/ spline coefficients in \code{re_coef}.}
}
\value{
Returns the penalty value and reports to \code{pql()} for a seamless experience.
}
\description{
This function computes penalties of the form
\deqn{0.5 \sum_{i} \lambda_i b_i^T S_i b_i}
and is intended to be used inside the penalized negative log-likelihood function when fitting models with splines or simple random effects with \code{RTMB} via penalized quasi-likelihood (PQL) with the \code{pql()} function.
}
\examples{
# Example with a single random effect
re = rep(0, 5)
S = diag(5)
lambda = 1
penalty(re, S, lambda)

# Example with two random effects, 
# where one element contains two random effects of similar structure
re = list(matrix(0, 2, 5), rep(0, 4))
S = list(diag(5), diag(4))
lambda = list(c(1,1), 2)
penalty(re, S, lambda)
}
