"0","mllk = function(theta.star, x){"
"0","  # parameter transformations for unconstraint optimization"
"0","  Gamma = LaMa::tpm(theta.star[1:2])"
"0","  delta = LaMa::stationary(Gamma) # stationary HMM"
"0","  mu = theta.star[3:4]"
"0","  sigma = exp(theta.star[5:6])"
"0","  # calculate all state-dependent probabilities outside the forward algorithm"
"0","  allprobs = matrix(1, length(x), 2)"
"0","  for(j in 1:2){ allprobs[,j] = stats::dnorm(x, mu[j], sigma[j]) }"
"0","  # return negative for minimization"
"0","  -LaMa::forward(delta, Gamma, allprobs)"
"0","}"
