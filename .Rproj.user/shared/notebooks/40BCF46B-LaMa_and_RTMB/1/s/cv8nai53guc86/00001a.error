{"frames":[{"func":"system.time(opt4 <- nlminb(obj4$par, obj4$fn, obj4$gr))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nlminb(obj4$par, obj4$fn, obj4$gr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"objective(.par, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try({\n    if (MCcontrol$doMC) {\n        ff(x, order = 0)\n        MC(last.par, n = MCcontrol$n, seed = MCcontrol$seed,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ff(x, order = 0)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try(do.call(\"newton\", c(list(par = eval(random.start), fn = f0, \n    gr = function(x) f0(x, order = 1), he = H0, env = env), inner.control)), \n    silent = silent)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(\"newton\", c(list(par = eval(random.start), fn = f0, gr = function(x) f0(x, \n    order = 1), he = H0, env = env), inner.control))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"newton(par = c(betaspline = 0, betaspline = 0, betaspline = 0, \nbetaspline = 0, betaspline = 0, betaspline = 0, betaspline = 0, \nbetaspline = 0, betaspline = 0, betaspline = 0, betaspline = 0, \nbetaspline = 0, betaspline = 0, betaspline = 0, betaspline = 0,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"he(par)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sparseHessianFun(env, skipFixedEffects = skipFixedEffects)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"new(\"dsTMatrix\", i = as.integer(attr(ADHess$ptr, \"i\")), j = as.integer(attr(ADHess$ptr, \n    \"j\")), x = ev(obj$env$par), Dim = c(n, n), uplo = \"L\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"initialize(value, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"methods:::loadMethod(new(\"MethodWithNext\", .Data = function (.Object, \n    ...) \n{\n    .Object <- callNextMethod() ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"methods:::loadMethod(new(\"MethodWithNext\", .Data = function (.Object, \n    ...) \n{\n    .Object <- callNextMethod() ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"callNextMethod()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"is(maybeMethod, \"MethodDefinition\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stopifnot(length(class2) == 1L)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"object 'stats' not found"}