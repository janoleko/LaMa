"0","mllk = function(theta.star, x, Z){"
"0","  beta = matrix(theta.star[1:6], nrow = 2) # matrix of coefficients"
"0","  Gamma = tpm_g(Z[-1,], beta) # excluding the first covariate value -> n-1 tpms"
"0","  delta = c(1, exp(theta.star[7]))"
"0","  delta = delta / sum(delta)"
"0","  mu = theta.star[8:9]"
"0","  sigma = exp(theta.star[10:11])"
"0","  # calculate all state-dependent probabilities"
"0","  allprobs = matrix(1, length(x), 2)"
"0","  for(j in 1:2){ allprobs[,j] = dnorm(x, mu[j], sigma[j]) }"
"0","  # return negative for minimization"
"0","  -forward_g(delta, Gamma, allprobs)"
"0","}"
